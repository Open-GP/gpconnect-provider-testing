// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GPConnect.Provider.AcceptanceTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("AccessRecord")]
    [NUnit.Framework.CategoryAttribute("accessrecordthe")]
    [NUnit.Framework.CategoryAttribute("Patient")]
    [NUnit.Framework.CategoryAttribute("Identifiers")]
    [NUnit.Framework.CategoryAttribute("should")]
    [NUnit.Framework.CategoryAttribute("b")]
    public partial class AccessRecordFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AccessRecord.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AccessRecord", null, ProgrammingLanguage.CSharp, new string[] {
                        "accessrecordthe",
                        "Patient",
                        "Identifiers",
                        "should",
                        "b"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("patient is a valid fhir resource")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        public virtual void PatientIsAValidFhirResource()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("patient is a valid fhir resource", new string[] {
                        "ignore"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("if patient contains name elements")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        public virtual void IfPatientContainsNameElements()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("if patient contains name elements", new string[] {
                        "ignore"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("if patient contains gender")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        public virtual void IfPatientContainsGender()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("if patient contains gender", new string[] {
                        "ignore"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("if patient contains address")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        public virtual void IfPatientContainsAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("if patient contains address", new string[] {
                        "ignore"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Retrieve the care record sections for a patient")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void RetrieveTheCareRecordSectionsForAPatient(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Retrieve the care record sections for a patient", exampleTags);
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 26
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Empty request")]
        public virtual void EmptyRequest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Empty request", ((string[])(null)));
#line 47
this.ScenarioSetup(scenarioInfo);
#line 48
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.Then("the response status code should be \"400\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 52
  testRunner.And("the response should be a OperationOutcome resource", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("No record section requested")]
        public virtual void NoRecordSectionRequested()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("No record section requested", ((string[])(null)));
#line 54
this.ScenarioSetup(scenarioInfo);
#line 55
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
 testRunner.Then("the response status code should be \"400\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 60
  testRunner.And("the response should be a OperationOutcome resource", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Invalid record section requested")]
        public virtual void InvalidRecordSectionRequested()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Invalid record section requested", ((string[])(null)));
#line 62
this.ScenarioSetup(scenarioInfo);
#line 63
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 64
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
  testRunner.And("I add a Record Section parameter with invalid Code", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
 testRunner.Then("the response status code should be \"422\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 69
  testRunner.And("the response should be a OperationOutcome resource with error code \"INVALID_PARAM" +
                    "ETER\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Multiple record sections requested")]
        public virtual void MultipleRecordSectionsRequested()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Multiple record sections requested", ((string[])(null)));
#line 71
this.ScenarioSetup(scenarioInfo);
#line 72
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 73
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
  testRunner.And("I add a Record Section parameter for \"SUM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
  testRunner.And("I add a Record Section parameter for \"ALL\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
 testRunner.Then("the response status code should be \"400\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 79
  testRunner.And("the response should be a OperationOutcome resource", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Multiple duplication record sections in request")]
        public virtual void MultipleDuplicationRecordSectionsInRequest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Multiple duplication record sections in request", ((string[])(null)));
#line 81
this.ScenarioSetup(scenarioInfo);
#line 82
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 83
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
  testRunner.And("I add a Record Section parameter for \"SUM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
  testRunner.And("I add a Record Section parameter for \"SUM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 88
 testRunner.Then("the response status code should be \"400\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 89
  testRunner.And("the response should be a OperationOutcome resource", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Record section with invalid system for codable concept")]
        public virtual void RecordSectionWithInvalidSystemForCodableConcept()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Record section with invalid system for codable concept", ((string[])(null)));
#line 91
this.ScenarioSetup(scenarioInfo);
#line 92
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 93
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
  testRunner.And("I add a Record Section parameter for \"SUM\" with invalid System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
 testRunner.Then("the response status code should be \"400\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 98
  testRunner.And("the response should be a OperationOutcome resource", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Request record sections with String type rather than CodableConcept")]
        public virtual void RequestRecordSectionsWithStringTypeRatherThanCodableConcept()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Request record sections with String type rather than CodableConcept", ((string[])(null)));
#line 100
this.ScenarioSetup(scenarioInfo);
#line 101
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 102
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
  testRunner.And("I add a Record Section parameter for \"SUM\" using an invalid parameter type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 106
 testRunner.Then("the response status code should be \"400\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 107
  testRunner.And("the response should be a OperationOutcome resource", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("No patient NHS number supplied")]
        public virtual void NoPatientNHSNumberSupplied()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("No patient NHS number supplied", ((string[])(null)));
#line 109
this.ScenarioSetup(scenarioInfo);
#line 110
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 111
  testRunner.And("I add a Record Section parameter for \"SUM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 114
 testRunner.Then("the response status code should be \"400\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 115
  testRunner.And("the response should be a OperationOutcome resource", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Invalid NHS number supplied")]
        public virtual void InvalidNHSNumberSupplied()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Invalid NHS number supplied", ((string[])(null)));
#line 117
this.ScenarioSetup(scenarioInfo);
#line 118
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 119
  testRunner.And("I add an NHS Number parameter for an invalid NHS Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
  testRunner.And("I add a Record Section parameter for \"SUM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 123
 testRunner.Then("the response status code should be \"400\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 124
  testRunner.And("the response should be a OperationOutcome resource with error code \"INVALID_NHS_N" +
                    "UMBER\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Invalid identifier system for patient NHS number")]
        public virtual void InvalidIdentifierSystemForPatientNHSNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Invalid identifier system for patient NHS number", ((string[])(null)));
#line 126
this.ScenarioSetup(scenarioInfo);
#line 127
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 128
  testRunner.And("I add an NHS Number parameter for \"patient2\" with an invalid Identifier System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
  testRunner.And("I add a Record Section parameter for \"SUM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 132
 testRunner.Then("the response status code should be \"400\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 133
  testRunner.And("the response should be a OperationOutcome resource with error code \"INVALID_IDENT" +
                    "IFIER_SYSTEM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Multiple different NHS number parameters in request")]
        public virtual void MultipleDifferentNHSNumberParametersInRequest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Multiple different NHS number parameters in request", ((string[])(null)));
#line 135
this.ScenarioSetup(scenarioInfo);
#line 136
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 137
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 138
  testRunner.And("I add an NHS Number parameter for \"patient3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
  testRunner.And("I add a Record Section parameter for \"SUM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 140
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 142
 testRunner.Then("the response status code should be \"400\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 143
  testRunner.And("the response should be a OperationOutcome resource", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Duplicate NHS number parameters in request")]
        public virtual void DuplicateNHSNumberParametersInRequest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Duplicate NHS number parameters in request", ((string[])(null)));
#line 145
this.ScenarioSetup(scenarioInfo);
#line 146
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 147
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
  testRunner.And("I add a Record Section parameter for \"SUM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 152
 testRunner.Then("the response status code should be \"400\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 153
  testRunner.And("the response should be a OperationOutcome resource", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("No patient found with NHS number")]
        public virtual void NoPatientFoundWithNHSNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("No patient found with NHS number", ((string[])(null)));
#line 155
this.ScenarioSetup(scenarioInfo);
#line 156
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 157
  testRunner.And("I add an NHS Number parameter for \"patientNotInSystem\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
  testRunner.And("I add a Record Section parameter for \"SUM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patientNotInSystem\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 160
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 161
 testRunner.Then("the response status code should be \"404\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 162
  testRunner.And("the response should be a OperationOutcome resource with error code \"PATIENT_NOT_F" +
                    "OUND\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Request care record section with patientNHSNumber using String type value")]
        public virtual void RequestCareRecordSectionWithPatientNHSNumberUsingStringTypeValue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Request care record section with patientNHSNumber using String type value", ((string[])(null)));
#line 164
this.ScenarioSetup(scenarioInfo);
#line 165
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 166
  testRunner.And("I add an NHS Number parameter for \"patient2\" using an invalid parameter type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
  testRunner.And("I add a Record Section parameter for \"SUM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 168
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 170
 testRunner.Then("the response status code should be \"400\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 171
  testRunner.And("the response should be a OperationOutcome resource", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Time period specified for a care record section that can be filtered")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        public virtual void TimePeriodSpecifiedForACareRecordSectionThatCanBeFiltered(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Time period specified for a care record section that can be filtered", exampleTags);
#line 173
this.ScenarioSetup(scenarioInfo);
#line 174
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 175
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
  testRunner.And("I add a valid Time Period parameter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 179
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 180
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 181
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Time period specified for a care record section that must not be filtered")]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void TimePeriodSpecifiedForACareRecordSectionThatMustNotBeFiltered(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Time period specified for a care record section that must not be filtered", exampleTags);
#line 194
this.ScenarioSetup(scenarioInfo);
#line 195
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 196
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
  testRunner.And("I add a valid Time Period parameter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 201
 testRunner.Then("the response status code should be \"400\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 202
  testRunner.And("the response should be a OperationOutcome resource", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Access blocked to care record as no patient consent")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void AccessBlockedToCareRecordAsNoPatientConsent(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Access blocked to care record as no patient consent", exampleTags);
#line 209
this.ScenarioSetup(scenarioInfo);
#line 210
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 211
  testRunner.And("I add an NHS Number parameter for \"patient15\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 212
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient15\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 214
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 215
 testRunner.Then("the response status code should be \"403\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 216
  testRunner.And("the response should be a OperationOutcome resource with error code \"NO_PATIENT_CO" +
                    "NSENT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Request patient summary with parameters in oposite order to other tests")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        public virtual void RequestPatientSummaryWithParametersInOpositeOrderToOtherTests(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Request patient summary with parameters in oposite order to other tests", exampleTags);
#line 232
this.ScenarioSetup(scenarioInfo);
#line 233
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 234
  testRunner.And("I add a valid Time Period parameter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 236
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 237
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 238
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 239
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 240
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Request care record where request resource type is something other than Parameter" +
            "s")]
        public virtual void RequestCareRecordWhereRequestResourceTypeIsSomethingOtherThanParameters()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Request care record where request resource type is something other than Parameter" +
                    "s", ((string[])(null)));
#line 250
this.ScenarioSetup(scenarioInfo);
#line 251
  testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 252
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 253
  testRunner.And("I add a Record Section parameter for \"SUM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 254
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 255
 testRunner.When("I make the \"GpcGetCareRecord\" request with invalid Resource type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 256
 testRunner.Then("the response status code should be \"422\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 257
  testRunner.And("the response should be a OperationOutcome resource with error code \"INVALID_RESOU" +
                    "RCE\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Invalid start date parameter")]
        public virtual void InvalidStartDateParameter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Invalid start date parameter", ((string[])(null)));
#line 259
this.ScenarioSetup(scenarioInfo);
#line 260
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 261
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 262
  testRunner.And("I add a Record Section parameter for \"ENC\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 263
  testRunner.And("I add a Time Period parameter with invalid Start Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 264
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 265
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 266
 testRunner.Then("the response status code should be \"422\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 267
  testRunner.And("the response should be a OperationOutcome resource with error code \"INVALID_PARAM" +
                    "ETER\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Invalid end date parameter")]
        public virtual void InvalidEndDateParameter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Invalid end date parameter", ((string[])(null)));
#line 269
this.ScenarioSetup(scenarioInfo);
#line 270
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 271
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 272
  testRunner.And("I add a Record Section parameter for \"ENC\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 273
  testRunner.And("I add a Time Period parameter with invalid End Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 274
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 275
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 276
 testRunner.Then("the response status code should be \"422\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 277
  testRunner.And("the response should be a OperationOutcome resource with error code \"INVALID_PARAM" +
                    "ETER\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Time period where start date parameter is after end date parameter")]
        public virtual void TimePeriodWhereStartDateParameterIsAfterEndDateParameter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Time period where start date parameter is after end date parameter", ((string[])(null)));
#line 279
this.ScenarioSetup(scenarioInfo);
#line 280
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 281
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 282
  testRunner.And("I add a Record Section parameter for \"ENC\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 283
  testRunner.And("I add a Time Period parameter with Start Date after End Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 284
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 285
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 286
 testRunner.Then("the response status code should be \"422\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 287
  testRunner.And("the response should be a OperationOutcome resource with error code \"INVALID_PARAM" +
                    "ETER\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Time period with only start date parameter")]
        public virtual void TimePeriodWithOnlyStartDateParameter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Time period with only start date parameter", ((string[])(null)));
#line 289
this.ScenarioSetup(scenarioInfo);
#line 290
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 291
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 292
  testRunner.And("I add a Record Section parameter for \"ENC\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 293
  testRunner.And("I add a Time Period parameter with Start Date only", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 294
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 295
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 296
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 297
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Time period with only end date parameter")]
        public virtual void TimePeriodWithOnlyEndDateParameter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Time period with only end date parameter", ((string[])(null)));
#line 299
this.ScenarioSetup(scenarioInfo);
#line 300
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 301
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 302
  testRunner.And("I add a Record Section parameter for \"ENC\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 303
  testRunner.And("I add a Time Period parameter with End Date only", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 304
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 305
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 306
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 307
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("response should be bundle containing all mandatory elements")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void ResponseShouldBeBundleContainingAllMandatoryElements(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("response should be bundle containing all mandatory elements", exampleTags);
#line 309
this.ScenarioSetup(scenarioInfo);
#line 310
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 311
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 312
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 313
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 314
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 315
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 316
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
  testRunner.And("the response bundle should contain a single Composition resource", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
  testRunner.And("the response bundle should contain a single Patient resource", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("response bundle should contain composition as the first entry")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void ResponseBundleShouldContainCompositionAsTheFirstEntry(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("response bundle should contain composition as the first entry", exampleTags);
#line 334
this.ScenarioSetup(scenarioInfo);
#line 335
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 336
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 337
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 338
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 339
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 340
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 341
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 342
  testRunner.And("the response bundle should contain the composition resource as the first entry", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("request contain the structure definition in the meta fields")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void RequestContainTheStructureDefinitionInTheMetaFields(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("request contain the structure definition in the meta fields", exampleTags);
#line 358
this.ScenarioSetup(scenarioInfo);
#line 359
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 360
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 361
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 362
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 363
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 364
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 365
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 366
  testRunner.And("the Composition Metadata should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 367
  testRunner.And("the patient resource in the bundle should contain meta data profile and version i" +
                    "d", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 368
  testRunner.And("if the response bundle contains an organization resource it should contain meta d" +
                    "ata profile and version id", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 369
  testRunner.And("the Practitioner Metadata should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 370
  testRunner.And("if the response bundle contains a device resource it should contain meta data pro" +
                    "file and version id", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 371
  testRunner.And("the Location Metadata should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("composition contains generic mandatory fields")]
        [NUnit.Framework.TestCaseAttribute("patient1", "ADM", "Administrative Items", "Administrative Items", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient2", "ADM", "Administrative Items", "Administrative Items", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient1", "ALL", "Allergies and Adverse Reactions", "Allergies and Adverse Reactions", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient2", "ALL", "Allergies and Adverse Reactions", "Allergies and Adverse Reactions", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient1", "CLI", "Clinical Items", "Clinical Items", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient2", "CLI", "Clinical Items", "Clinical Items", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient1", "ENC", "Encounters", "Encounters", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient2", "ENC", "Encounters", "Encounters", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient1", "IMM", "Immunisations", "Immunisations", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient2", "IMM", "Immunisations", "Immunisations", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient1", "MED", "Medications", "Medications", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient2", "MED", "Medications", "Medications", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient1", "OBS", "Observations", "Observations", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient2", "OBS", "Observations", "Observations", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient1", "PRB", "Problems", "Problems", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient2", "PRB", "Problems", "Problems", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient1", "REF", "Referrals", "Referrals", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient2", "REF", "Referrals", "Referrals", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient1", "SUM", "Summary", "Summary", new string[0])]
        [NUnit.Framework.TestCaseAttribute("patient2", "SUM", "Summary", "Summary", new string[0])]
        public virtual void CompositionContainsGenericMandatoryFields(string patient, string code, string title, string display, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("composition contains generic mandatory fields", exampleTags);
#line 387
this.ScenarioSetup(scenarioInfo);
#line 388
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 389
  testRunner.And(string.Format("I add an NHS Number parameter for \"{0}\"", patient), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 390
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 391
  testRunner.And(string.Format("I set the JWT Requested Record to the NHS Number for \"{0}\"", patient), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 392
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 393
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 394
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 395
  testRunner.And("the Composition should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 396
  testRunner.And(string.Format("the Composition Section should be valid for \"{0}\", \"{1}\", \"{2}\"", title, code, display), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("if composition contains type mandatory field fixed values should be correct")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void IfCompositionContainsTypeMandatoryFieldFixedValuesShouldBeCorrect(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("if composition contains type mandatory field fixed values should be correct", exampleTags);
#line 424
this.ScenarioSetup(scenarioInfo);
#line 425
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 426
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 427
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 428
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 429
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 430
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 431
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 432
  testRunner.And("the Composition Type should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("if composition contains class coding")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void IfCompositionContainsClassCoding(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("if composition contains class coding", exampleTags);
#line 448
this.ScenarioSetup(scenarioInfo);
#line 449
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 450
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 451
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 452
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 453
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 454
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 455
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 456
  testRunner.And("the Composition Class should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("composition contains subject referencing a patient resource in the bundle")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void CompositionContainsSubjectReferencingAPatientResourceInTheBundle(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("composition contains subject referencing a patient resource in the bundle", exampleTags);
#line 472
this.ScenarioSetup(scenarioInfo);
#line 473
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 474
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 475
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 476
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 477
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 478
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 479
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 480
  testRunner.And("the Composition Subject should be referenced in the Bundle", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("if composition contains author, the device reference can be found in the bundle")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void IfCompositionContainsAuthorTheDeviceReferenceCanBeFoundInTheBundle(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("if composition contains author, the device reference can be found in the bundle", exampleTags);
#line 496
this.ScenarioSetup(scenarioInfo);
#line 497
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 498
  testRunner.And("I add an NHS Number parameter for \"patient1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 499
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 500
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 501
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 502
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 503
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 504
  testRunner.And("the Composition Author should be referenced in the Bundle", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("if composition contains custodian reference")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void IfCompositionContainsCustodianReference(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("if composition contains custodian reference", exampleTags);
#line 520
this.ScenarioSetup(scenarioInfo);
#line 521
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 522
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 523
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 524
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 525
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 526
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 527
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 528
  testRunner.And("the Composition Custodian should be referenced in the Bundle", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("patient contains a valid identifiers")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void PatientContainsAValidIdentifiers(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("patient contains a valid identifiers", exampleTags);
#line 544
this.ScenarioSetup(scenarioInfo);
#line 545
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 546
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 547
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 548
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 549
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 550
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 551
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 552
  testRunner.And("the Patient Id should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 553
  testRunner.And("the Patient Identifiers should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("if patient contains telecom information")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void IfPatientContainsTelecomInformation(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("if patient contains telecom information", exampleTags);
#line 569
this.ScenarioSetup(scenarioInfo);
#line 570
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 571
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 572
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 573
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 574
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 575
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 576
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 577
  testRunner.And("the Patient Telecom should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("if patient contains maritalStatus")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void IfPatientContainsMaritalStatus(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("if patient contains maritalStatus", exampleTags);
#line 593
this.ScenarioSetup(scenarioInfo);
#line 594
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 595
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 596
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 597
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 598
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 599
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 600
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 601
  testRunner.And("the Patient MaritalStatus should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("if patient contains contact")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void IfPatientContainsContact(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("if patient contains contact", exampleTags);
#line 617
this.ScenarioSetup(scenarioInfo);
#line 618
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 619
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 620
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 621
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 622
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 623
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 624
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 625
  testRunner.And("the Patient Contact should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("if patient contins communicaiton")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void IfPatientContinsCommunicaiton(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("if patient contins communicaiton", exampleTags);
#line 641
this.ScenarioSetup(scenarioInfo);
#line 642
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 643
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 644
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 645
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 646
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 647
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 648
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 649
  testRunner.And("the Patient Communication should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("if patient contains practitioner as care provider")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void IfPatientContainsPractitionerAsCareProvider(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("if patient contains practitioner as care provider", exampleTags);
#line 665
this.ScenarioSetup(scenarioInfo);
#line 666
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 667
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 668
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 669
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 670
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 671
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 672
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 673
  testRunner.And("the Patient GeneralPractitioner Practitioner should be referenced in the Bundle", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("if patient contains managingOrganizaiton")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void IfPatientContainsManagingOrganizaiton(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("if patient contains managingOrganizaiton", exampleTags);
#line 689
this.ScenarioSetup(scenarioInfo);
#line 690
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 691
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 692
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 693
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 694
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 695
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 696
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 697
  testRunner.And("the Patient ManagingOrganization Organization should be referenced in the Bundle", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("patient does not contain disallowed fields")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void PatientDoesNotContainDisallowedFields(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("patient does not contain disallowed fields", exampleTags);
#line 713
this.ScenarioSetup(scenarioInfo);
#line 714
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 715
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 716
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 717
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 718
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 719
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 720
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 721
  testRunner.And("the Patient should exclude disallowed fields", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("practitioner resource contains mandatory fields and does not include dissallowed " +
            "fields")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void PractitionerResourceContainsMandatoryFieldsAndDoesNotIncludeDissallowedFields(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("practitioner resource contains mandatory fields and does not include dissallowed " +
                    "fields", exampleTags);
#line 737
this.ScenarioSetup(scenarioInfo);
#line 738
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 739
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 740
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 741
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 742
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 743
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 744
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 745
  testRunner.And("the Practitioner Name should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 746
  testRunner.And("the Practitioner should exclude disallowed elements", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("practitioner resource contains mandatory fields within optional elements")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void PractitionerResourceContainsMandatoryFieldsWithinOptionalElements(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("practitioner resource contains mandatory fields within optional elements", exampleTags);
#line 762
this.ScenarioSetup(scenarioInfo);
#line 763
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 764
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 765
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 766
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 767
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 768
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 769
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 770
  testRunner.And("the Practitioner Identifiers should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 771
  testRunner.And("the Practitioner nhsCommunication should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("organization resource identifiers")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void OrganizationResourceIdentifiers(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("organization resource identifiers", exampleTags);
#line 787
this.ScenarioSetup(scenarioInfo);
#line 788
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 789
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 790
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 791
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 792
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 793
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 794
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 795
  testRunner.And("the Organization Identifiers should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("organization resource element cardinality")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void OrganizationResourceElementCardinality(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("organization resource element cardinality", exampleTags);
#line 811
this.ScenarioSetup(scenarioInfo);
#line 812
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 813
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 814
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 815
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 816
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 817
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 818
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 819
  testRunner.And("the Organization Type should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("organization resource internal reference")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void OrganizationResourceInternalReference(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("organization resource internal reference", exampleTags);
#line 835
this.ScenarioSetup(scenarioInfo);
#line 836
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 837
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 838
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 839
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 840
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 841
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 842
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 843
  testRunner.And("the Organization PartOf Organization should be referenced in the Bundle", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("device resource element cardinality conformance")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void DeviceResourceElementCardinalityConformance(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("device resource element cardinality conformance", exampleTags);
#line 859
this.ScenarioSetup(scenarioInfo);
#line 860
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 861
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 862
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 863
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 864
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 865
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 866
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 867
  testRunner.And("the Device should exclude fields", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 868
  testRunner.And("the Device Note should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 869
  testRunner.And("the Device Identifier should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("device resource type element values match specification")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void DeviceResourceTypeElementValuesMatchSpecification(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("device resource type element values match specification", exampleTags);
#line 885
this.ScenarioSetup(scenarioInfo);
#line 886
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 887
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 888
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 889
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 890
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 891
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 892
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 893
  testRunner.And("the Device Type should be valid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("check all dateTime format variations are allowed")]
        [NUnit.Framework.TestCaseAttribute("ADM", "2014", "2016", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ADM", "2014-02", "2016", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ADM", "2014-10-05", "2016-08", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ADM", "2014-05", "2016-09-14", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ADM", "2014-05-01T11:08:32", "2016-12-08T09:22:16", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ADM", "2015-10-23T11:08:32+00:00", "2016-12-08T23:59:59+00:00", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", "2013", "2017", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", "2014-02", "2016", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", "2014-02-03", "2016-01-24", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", "2014", "2016-06-01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", "2015-11-28T22:53:01", "2017-01-08T14:02:43", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", "2015-03-14T03:14:11+00:00", "2016-08-03T18:32:43+00:00", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", "2015", "2017-01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", "2015-05", "2017-01-27", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", "2014-10-05", "2016", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", "2014-10-05", "2016-08", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", "2014-10-05", "2016-09-01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", "2015-11-28T18:22:01", "2017-01-04T01:01:22", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", "2014-04-03T22:03:25+00:00", "2016-03-13T17:13:12+00:00", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", "2013", "2017", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", "2014-02", "2016", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", "2014-02-03", "2016-01-24", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", "2014", "2016-06-01", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", "2015-11-28T22:53:01", "2017-01-08T14:02:43", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", "2015-03-14T03:14:11+00:00", "2016-08-03T18:32:43+00:00", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", "2014", "2016", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", "2014-02", "2016", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", "2014-10-05", "2016-08", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", "2014-05", "2016-09-14", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", "2014-05-01T11:08:32", "2016-12-08T09:22:16", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", "2015-10-23T11:08:32+00:00", "2016-12-08T23:59:59+00:00", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", "2014", "2016", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", "2014-02", "2016", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", "2014-10-05", "2016-08", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", "2014-05", "2016-09-14", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", "2014-05-01T11:08:32", "2016-12-08T09:22:16", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", "2015-10-23T11:08:32+00:00", "2016-12-08T23:59:59+00:00", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", "2014", "2016", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", "2014-02", "2016", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", "2014-10-05", "2016-08", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", "2014-05", "2016-09-14", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", "2014-05-01T11:08:32", "2016-12-08T09:22:16", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", "2015-10-23T11:08:32+00:00", "2016-12-08T23:59:59+00:00", new string[0])]
        public virtual void CheckAllDateTimeFormatVariationsAreAllowed(string code, string startDateTime, string endDateTime, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("check all dateTime format variations are allowed", exampleTags);
#line 909
this.ScenarioSetup(scenarioInfo);
#line 910
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 911
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 912
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 913
  testRunner.And(string.Format("I add a Time Period parameter with \"{0}\" and \"{1}\"", startDateTime, endDateTime), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 914
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 915
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 916
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 917
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Request parameter patientNHSNumber values is empty")]
        public virtual void RequestParameterPatientNHSNumberValuesIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Request parameter patientNHSNumber values is empty", ((string[])(null)));
#line 966
this.ScenarioSetup(scenarioInfo);
#line 967
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 968
  testRunner.And("I add an NHS Number parameter with an empty NHS Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 969
  testRunner.And("I add a Record Section parameter for \"SUM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 970
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 971
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 972
 testRunner.Then("the response status code should be \"422\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 973
  testRunner.And("the response should be a OperationOutcome resource with error code \"INVALID_PARAM" +
                    "ETER\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Request parameter patientNHSNumber system is empty")]
        public virtual void RequestParameterPatientNHSNumberSystemIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Request parameter patientNHSNumber system is empty", ((string[])(null)));
#line 975
this.ScenarioSetup(scenarioInfo);
#line 976
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 977
  testRunner.And("I add an NHS Number parameter for \"patient2\" with an empty Identifier System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 978
  testRunner.And("I add a Record Section parameter for \"SUM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 979
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 980
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 981
 testRunner.Then("the response status code should be \"422\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 982
  testRunner.And("the response should be a OperationOutcome resource with error code \"INVALID_PARAM" +
                    "ETER\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Request parameter recordSection values is empty")]
        public virtual void RequestParameterRecordSectionValuesIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Request parameter recordSection values is empty", ((string[])(null)));
#line 984
this.ScenarioSetup(scenarioInfo);
#line 985
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 986
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 987
  testRunner.And("I add a Record Section parameter with empty Code", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 988
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 989
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 990
 testRunner.Then("the response status code should be \"422\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 991
  testRunner.And("the response should be a OperationOutcome resource with error code \"INVALID_PARAM" +
                    "ETER\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Request parameter recordSection system is empty")]
        public virtual void RequestParameterRecordSectionSystemIsEmpty()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Request parameter recordSection system is empty", ((string[])(null)));
#line 993
this.ScenarioSetup(scenarioInfo);
#line 994
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 995
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 996
  testRunner.And("I add a Record Section parameter for \"SUM\" with empty System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 997
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 998
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 999
 testRunner.Then("the response status code should be \"422\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1000
  testRunner.And("the response should be a OperationOutcome resource with error code \"INVALID_PARAM" +
                    "ETER\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Requested section code incorrect parameter case")]
        [NUnit.Framework.TestCaseAttribute("adm", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Adm", new string[0])]
        [NUnit.Framework.TestCaseAttribute("aDm", new string[0])]
        [NUnit.Framework.TestCaseAttribute("all", new string[0])]
        [NUnit.Framework.TestCaseAttribute("All", new string[0])]
        [NUnit.Framework.TestCaseAttribute("AlL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("cli", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Cli", new string[0])]
        [NUnit.Framework.TestCaseAttribute("enc", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Enc", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENc", new string[0])]
        [NUnit.Framework.TestCaseAttribute("imm", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Imm", new string[0])]
        [NUnit.Framework.TestCaseAttribute("iMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("med", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Med", new string[0])]
        [NUnit.Framework.TestCaseAttribute("mEd", new string[0])]
        [NUnit.Framework.TestCaseAttribute("obs", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Obs", new string[0])]
        [NUnit.Framework.TestCaseAttribute("prb", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Prb", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ref", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Ref", new string[0])]
        [NUnit.Framework.TestCaseAttribute("sum", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Sum", new string[0])]
        [NUnit.Framework.TestCaseAttribute("sUm", new string[0])]
        public virtual void RequestedSectionCodeIncorrectParameterCase(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Requested section code incorrect parameter case", exampleTags);
#line 1002
this.ScenarioSetup(scenarioInfo);
#line 1003
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1004
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1005
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1006
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1007
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1008
 testRunner.Then("the response status code should be \"422\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1009
  testRunner.And("the response should be a OperationOutcome resource with error code \"INVALID_PARAM" +
                    "ETER\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A patient is requested which is not on Spine but is on provider system")]
        [NUnit.Framework.TestCaseAttribute("ADM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ALL", new string[0])]
        [NUnit.Framework.TestCaseAttribute("CLI", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ENC", new string[0])]
        [NUnit.Framework.TestCaseAttribute("IMM", new string[0])]
        [NUnit.Framework.TestCaseAttribute("MED", new string[0])]
        [NUnit.Framework.TestCaseAttribute("OBS", new string[0])]
        [NUnit.Framework.TestCaseAttribute("PRB", new string[0])]
        [NUnit.Framework.TestCaseAttribute("REF", new string[0])]
        [NUnit.Framework.TestCaseAttribute("SUM", new string[0])]
        public virtual void APatientIsRequestedWhichIsNotOnSpineButIsOnProviderSystem(string code, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A patient is requested which is not on Spine but is on provider system", exampleTags);
#line 1043
this.ScenarioSetup(scenarioInfo);
#line 1044
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1045
  testRunner.And("I add an NHS Number parameter for \"patient14\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1046
  testRunner.And(string.Format("I add a Record Section parameter for \"{0}\"", code), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1047
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient14\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1048
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1049
 testRunner.Then("the response status code should be \"404\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1050
  testRunner.And("the response should be a OperationOutcome resource with error code \"PATIENT_NOT_F" +
                    "OUND\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Access record valid response check caching headers exist")]
        public virtual void AccessRecordValidResponseCheckCachingHeadersExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Access record valid response check caching headers exist", ((string[])(null)));
#line 1066
this.ScenarioSetup(scenarioInfo);
#line 1067
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1068
  testRunner.And("I add an NHS Number parameter for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1069
  testRunner.And("I add a Record Section parameter for \"ADM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1070
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1071
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1072
 testRunner.Then("the response status code should indicate success", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1073
  testRunner.And("the response should be a Bundle resource of type \"searchset\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1074
  testRunner.And("the required cacheing headers should be present in the response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Access record invalid response check caching headers exist")]
        public virtual void AccessRecordInvalidResponseCheckCachingHeadersExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Access record invalid response check caching headers exist", ((string[])(null)));
#line 1077
this.ScenarioSetup(scenarioInfo);
#line 1078
 testRunner.Given("I configure the default \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1079
  testRunner.And("I set the JWT Requested Record to the NHS Number for \"patient2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1080
 testRunner.When("I make the \"GpcGetCareRecord\" request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1081
 testRunner.Then("the response status code should be \"400\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1082
  testRunner.And("the response should be a OperationOutcome resource", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1083
  testRunner.And("the required cacheing headers should be present in the response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Identifier order in response resources")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        public virtual void IdentifierOrderInResponseResources()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Identifier order in response resources", new string[] {
                        "ignore"});
#line 1087
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patients flag as sensitive should return a minimal patient resource which does no" +
            "t contain sensitive fields")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("Manual")]
        public virtual void PatientsFlagAsSensitiveShouldReturnAMinimalPatientResourceWhichDoesNotContainSensitiveFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patients flag as sensitive should return a minimal patient resource which does no" +
                    "t contain sensitive fields", new string[] {
                        "ignore",
                        "Manual"});
#line 1092
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patient with inactive nhs number in system should not return that NHS Number")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("Manual")]
        public virtual void PatientWithInactiveNhsNumberInSystemShouldNotReturnThatNHSNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patient with inactive nhs number in system should not return that NHS Number", new string[] {
                        "ignore",
                        "Manual"});
#line 1096
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Request records for patients with genders which do not match the valueset so must" +
            " addear to gender mapping")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("Manual")]
        public virtual void RequestRecordsForPatientsWithGendersWhichDoNotMatchTheValuesetSoMustAddearToGenderMapping()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Request records for patients with genders which do not match the valueset so must" +
                    " addear to gender mapping", new string[] {
                        "ignore",
                        "Manual"});
#line 1100
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check that all the genders supported by provider are in the GP Connect value set," +
            " if not check mapping is covered in documentation and system maps correctly")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("Manual")]
        public virtual void CheckThatAllTheGendersSupportedByProviderAreInTheGPConnectValueSetIfNotCheckMappingIsCoveredInDocumentationAndSystemMapsCorrectly()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check that all the genders supported by provider are in the GP Connect value set," +
                    " if not check mapping is covered in documentation and system maps correctly", new string[] {
                        "ignore",
                        "Manual"});
#line 1105
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Request records for patients contact with relationship which do not match the val" +
            "ueset so must addear to relationship mapping")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("Manual")]
        public virtual void RequestRecordsForPatientsContactWithRelationshipWhichDoNotMatchTheValuesetSoMustAddearToRelationshipMapping()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Request records for patients contact with relationship which do not match the val" +
                    "ueset so must addear to relationship mapping", new string[] {
                        "ignore",
                        "Manual"});
#line 1110
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check that all the relationship supported for contacts by the provider are in the" +
            " GP Connect value set, if not check mapping is covered in documentation and syst" +
            "em maps correctly")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("Manual")]
        public virtual void CheckThatAllTheRelationshipSupportedForContactsByTheProviderAreInTheGPConnectValueSetIfNotCheckMappingIsCoveredInDocumentationAndSystemMapsCorrectly()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check that all the relationship supported for contacts by the provider are in the" +
                    " GP Connect value set, if not check mapping is covered in documentation and syst" +
                    "em maps correctly", new string[] {
                        "ignore",
                        "Manual"});
#line 1115
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patient whos records are currently in transit")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("Manual")]
        public virtual void PatientWhosRecordsAreCurrentlyInTransit()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patient whos records are currently in transit", new string[] {
                        "ignore",
                        "Manual"});
#line 1120
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
